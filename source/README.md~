# Pluto

pluto is (just another) semantic language to describe UML Diagrams (Flowchart and  Entity-Relationship will follow).

## Why

There are many languages/ tools like this. There is Plantuml, UMLGraph, Mermaid.
Why make another? Because I want a language that describes the semantics of the graphical language (UML) in a clear way, leaving to layout tool (Graphviz) the burden to actually draw it. 

I prefer a language unambiguos and easy to remember (ideally you should read the manual only once) than easy to type (mermaid and plantuml use simbols like parenthesis, colon for their syntax, I prefer tags because they can be self explanatory).

The ultimate goal is to have a responsive (no java) tool to draw diagrams, as standalone or embedded in MarkDown documents (รก la Mermaid). 
The language try to be as similar as  possible to the good UMLGraph by Diomidis Spinellis.

## the pluto language

A Pluto file has extension `*.pluto`

A pluto file contains the declaration of UML elements. 

A valid Pluto file content is described using Extended Backus-Naur Form. The definition symbol is `:=`, a rule end with a semicolon, square brackets enclose  optional parts.


I simpliufied things for me: ID are only made of numbers, letters and underscore. 

~~~             
diagram := statement_list;
statement_list := statement, [statement_list];
statement := class_statement | object_statement | comment_statement | association_statement
            | generalization_statement | aggregation_statement 
            | composition_statement 
            | instantiation_statement ; 

node_statement := [space], node_keyword, space, ID, "{", body,"}" ;

ID := ( number | letter | underscore ), ID ;
If node_keyword is 'class' or 'object', then  body is in a special format 
to denote proprties and methods


~~~

TODO: delete any reference to nodes, the user don't need to be bored, it is alredy bored trying to understand UML.

## Implementation

Any text editor can be used to write pluto files. For your convenience I will provide Geany syntax highlight and autocompletions.

It is implemented as a preprocessor (a php script) that translates the Pluto file to a Graphviz script. Then the latter is compiled by the dot executable (the original C version or the ecmascript viz.js) into a diagram.

There will be  two frontends: 
+ A PHP script to be run in terminal.
+ A simple HTML+PHP application with integrated viewer.
